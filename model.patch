diff --git a/model.patch b/model.patch
index 86f8390..e69de29 100644
--- a/model.patch
+++ b/model.patch
@@ -1,419 +0,0 @@
-diff --git a/model.patch b/model.patch
-index 2832a12..e69de29 100644
---- a/model.patch
-+++ b/model.patch
-@@ -1,213 +0,0 @@
--diff --git a/backend/server.py b/backend/server.py
--index e66aa8f..bdb2cdb 100644
----- a/backend/server.py
--+++ b/backend/server.py
--@@ -474,6 +474,9 @@ async def get_lesson(lesson_id: str):
--     lesson = await db.lessons.find_one({"id": lesson_id})
--     if not lesson:
--         raise HTTPException(status_code=404, detail="Lesson not found")
--+    # Remove MongoDB _id field
--+    if "_id" in lesson:
--+        del lesson["_id"]
--     return lesson
-- 
-- @api_router.post("/lessons/{lesson_id}/complete")
--@@ -604,6 +607,11 @@ async def get_user_progress(user_id: str):
--     if not progress:
--         progress = UserProgress(user_id=user_id)
--         await db.user_progress.insert_one(progress.dict())
--+        progress = progress.dict()
--+    else:
--+        # Remove MongoDB _id field
--+        if "_id" in progress:
--+            del progress["_id"]
--     return progress
-- 
-- # Include router
--diff --git a/model.patch b/model.patch
--index e1ce2c6..e69de29 100644
----- a/model.patch
--+++ b/model.patch
--@@ -1,57 +0,0 @@
---diff --git a/backend/server.py b/backend/server.py
---index 6a29bad..e66aa8f 100644
------ a/backend/server.py
---+++ b/backend/server.py
---@@ -442,18 +442,30 @@ async def execute_trade(trade: TradeRequest):
--- async def get_portfolio(user_id: str):
---     """Get user's portfolio"""
---     positions = await db.positions.find({"user_id": user_id}).to_list(100)
---+    # Remove MongoDB _id field
---+    for position in positions:
---+        if "_id" in position:
---+            del position["_id"]
---     return {"positions": positions}
--- 
--- @api_router.get("/transactions/{user_id}")
--- async def get_transactions(user_id: str):
---     """Get user's transaction history"""
---     transactions = await db.transactions.find({"user_id": user_id}).sort("timestamp", -1).to_list(100)
---+    # Remove MongoDB _id field
---+    for transaction in transactions:
---+        if "_id" in transaction:
---+            del transaction["_id"]
---     return {"transactions": transactions}
--- 
--- @api_router.get("/lessons")
--- async def get_lessons():
---     """Get all lessons"""
---     lessons = await db.lessons.find().sort("order", 1).to_list(100)
---+    # Remove MongoDB _id field
---+    for lesson in lessons:
---+        if "_id" in lesson:
---+            del lesson["_id"]
---     return {"lessons": lessons}
--- 
--- @api_router.get("/lessons/{lesson_id}")
---@@ -495,6 +507,10 @@ async def complete_lesson(lesson_id: str, user_id: str):
--- async def get_lesson_quizzes(lesson_id: str):
---     """Get quizzes for a lesson"""
---     quizzes = await db.quizzes.find({"lesson_id": lesson_id}).to_list(100)
---+    # Remove MongoDB _id field
---+    for quiz in quizzes:
---+        if "_id" in quiz:
---+            del quiz["_id"]
---     return {"quizzes": quizzes}
--- 
--- @api_router.post("/quizzes/submit")
---@@ -532,6 +548,10 @@ async def get_daily_challenges():
---     """Get today's challenges"""
---     today = datetime.utcnow().strftime("%Y-%m-%d")
---     challenges = await db.challenges.find({"date": today}).to_list(100)
---+    # Remove MongoDB _id field
---+    for challenge in challenges:
---+        if "_id" in challenge:
---+            del challenge["_id"]
---     return {"challenges": challenges}
--- 
--- @api_router.get("/leaderboard")
--diff --git a/test_result.md b/test_result.md
--index 187cba4..781a276 100644
----- a/test_result.md
--+++ b/test_result.md
--@@ -100,4 +100,117 @@
-- 
-- #====================================================================================================
-- # Testing Data - Main Agent and testing sub agent both should log testing data below this section
---#====================================================================================================
--\ No newline at end of file
--+#====================================================================================================
--+
--+user_problem_statement: "Test complet de l'API backend de l'application TradePlay - Application mobile d'apprentissage du trading gamifiée avec authentification, trading virtuel (crypto), leçons et quiz, classement, et assistant IA"
--+
--+backend:
--+  - task: "Authentication API"
--+    implemented: true
--+    working: true
--+    file: "backend/server.py"
--+    stuck_count: 0
--+    priority: "high"
--+    needs_retesting: false
--+    status_history:
--+        - working: true
--+          agent: "testing"
--+          comment: "All authentication endpoints working correctly: POST /api/auth/login (create/login user), GET /api/users/{user_id} (get user info), proper 404 handling for non-existent users"
--+
--+  - task: "Market Data API"
--+    implemented: true
--+    working: true
--+    file: "backend/server.py"
--+    stuck_count: 0
--+    priority: "high"
--+    needs_retesting: false
--+    status_history:
--+        - working: true
--+          agent: "testing"
--+          comment: "Market data endpoints working: GET /api/market/crypto (retrieves crypto prices from CoinGecko), GET /api/market/news (returns sample news articles)"
--+
--+  - task: "Trading API"
--+    implemented: true
--+    working: true
--+    file: "backend/server.py"
--+    stuck_count: 0
--+    priority: "high"
--+    needs_retesting: false
--+    status_history:
--+        - working: true
--+          agent: "testing"
--+          comment: "All trading functionality working: POST /api/trading/execute (buy/sell crypto), GET /api/portfolio/{user_id} (view positions), GET /api/transactions/{user_id} (transaction history), proper validation for insufficient balance"
--+
--+  - task: "Learning API"
--+    implemented: true
--+    working: true
--+    file: "backend/server.py"
--+    stuck_count: 0
--+    priority: "high"
--+    needs_retesting: false
--+    status_history:
--+        - working: false
--+          agent: "testing"
--+          comment: "Initial test failed due to MongoDB ObjectId serialization issues in GET /api/lessons/{lesson_id} endpoint"
--+        - working: true
--+          agent: "testing"
--+          comment: "Fixed MongoDB ObjectId serialization issue. All learning endpoints working: GET /api/lessons (all lessons), GET /api/lessons/{lesson_id} (lesson details), POST /api/lessons/{lesson_id}/complete (complete lesson), GET /api/quizzes/{lesson_id} (lesson quizzes), POST /api/quizzes/submit (submit quiz answer)"
--+
--+  - task: "Challenges & Leaderboard API"
--+    implemented: true
--+    working: true
--+    file: "backend/server.py"
--+    stuck_count: 0
--+    priority: "medium"
--+    needs_retesting: false
--+    status_history:
--+        - working: true
--+          agent: "testing"
--+          comment: "Both endpoints working correctly: GET /api/challenges/daily (daily challenges), GET /api/leaderboard (user rankings by profit)"
--+
--+  - task: "AI Assistant API"
--+    implemented: true
--+    working: true
--+    file: "backend/server.py"
--+    stuck_count: 0
--+    priority: "medium"
--+    needs_retesting: false
--+    status_history:
--+        - working: true
--+          agent: "testing"
--+          comment: "AI Assistant working correctly: POST /api/ai/assistant responds with detailed trading advice using GPT-4o-mini via Emergent LLM integration"
--+
--+  - task: "Progress API"
--+    implemented: true
--+    working: true
--+    file: "backend/server.py"
--+    stuck_count: 0
--+    priority: "medium"
--+    needs_retesting: false
--+    status_history:
--+        - working: false
--+          agent: "testing"
--+          comment: "Initial test failed due to MongoDB ObjectId serialization issues in GET /api/progress/{user_id} endpoint"
--+        - working: true
--+          agent: "testing"
--+          comment: "Fixed MongoDB ObjectId serialization issue. Progress endpoint working: GET /api/progress/{user_id} (user progress tracking)"
--+
--+frontend:
--+  # Frontend testing not performed as per testing agent instructions
--+
--+metadata:
--+  created_by: "testing_agent"
--+  version: "1.0"
--+  test_sequence: 1
--+  run_ui: false
--+
--+test_plan:
--+  current_focus:
--+    - "All backend API endpoints tested and working"
--+  stuck_tasks: []
--+  test_all: true
--+  test_priority: "high_first"
--+
--+agent_communication:
--+    - agent: "testing"
--+      message: "Comprehensive backend API testing completed. All 20 test cases passed (100% success rate). Fixed 2 MongoDB ObjectId serialization issues in lesson details and user progress endpoints. All core functionality working: authentication, market data, trading, learning, challenges, leaderboard, AI assistant, and progress tracking."
--\ No newline at end of file
-diff --git a/sniper_market_academy/pubspec.yaml b/sniper_market_academy/pubspec.yaml
-index e4d7a8d..dfdd0dc 100644
---- a/sniper_market_academy/pubspec.yaml
-+++ b/sniper_market_academy/pubspec.yaml
-@@ -1,94 +1,102 @@
--name: sniper_market_academy
--description: Application éducative SMC pour traders.
--publish_to: 'none'
--
--version: 2.0.0+14
--
--environment:
--  sdk: ">=3.0.0 <4.0.0"
--
--dependencies:
--  flutter:
--    sdk: flutter
--  firebase_core: ^3.6.0
--  cloud_firestore: ^5.5.0
--  provider: ^6.1.2
--  flutter_local_notifications: ^17.0.0
--  url_launcher: ^6.3.0
--  audioplayers: ^5.2.1
--  flutter_native_splash: ^2.4.0
--  lottie: ^3.1.0
--  intl: ^0.18.1
--  in_app_purchase: ^3.1.9
--  shared_preferences: ^2.0.15
--  http: ^1.1.0
--  xml: ^6.3.0
--  image_picker: ^1.0.4
--  youtube_player_iframe: ^5.2.1
--  fl_chart: ^0.64.0
--  web_socket_channel: ^2.4.0
--  candlesticks: ^1.1.1
--  syncfusion_flutter_charts: ^24.2.4
--
--
--dev_dependencies:
--  flutter_test:
--    sdk: flutter
--  flutter_lints: ^2.0.0
--  flutter_launcher_icons: ^0.13.1
--
--flutter_native_splash:
--  color: "#000000"
--  image: assets/images/icon.png
--  android: true
--  ios: true
--
--flutter_icons:
--  android: true
--  ios: true
--  image_path: "assets/images/icon.png"
--
--flutter:
--  uses-material-design: true
--  assets:
--    - assets/images/icon.png
--    - assets/images/menu_background.png
--    - assets/images/bg_chart.png
--    - assets/images/placeholder.png
--    - assets/images/logo_sniper.png
--    - assets/animations/candles.json
--
--    # 📘 Modules explicatifs
--    - assets/images/market_structure_explained.png
--    - assets/images/bos_module_explained.png
--    - assets/images/fvg_module_explained.png
--    - assets/images/ote_module_explained.png
--    - assets/images/liquidity_module_explained.png
--    - assets/images/displacement_module_explained.png
--    - assets/images/orderblock_module_explained.png
--
--    # 🧠 Exercices interactifs
--    - assets/images/bos_question_graph_1.png
--    - assets/images/bos_question_graph_2.png
--    - assets/images/fvg_exercise1_graph.png
--    - assets/images/ote_exercise1_graph.png
--    - assets/images/displacement_exercise1_graph.png
--    - assets/images/liquidity_exercise1_graph.png
--    - assets/images/orderblock_exercise1_graph.png
--    - assets/images/setup_complet_exercise1_graph.png
--    - assets/images/setup_complet_exercise2_graph.png
--    - assets/images/fvg_example.png
--
--    # 📊 Simulateur papier
--    - assets/images/chart_1.png
--    - assets/images/chart_2.png
--    - assets/images/chart_3.png
--    - assets/images/chart_4.png
--    - assets/images/scalp_ready_assistant_exercise1_graph.png
--    - assets/images/scalp_ready_exercise1.png
--
--    # 🤖 Bot IA - Image test pour l'analyse
--    - assets/images/test.png
--
--    # 🔊 Sons
--    - assets/audio/sniper_scan_effect.mp3
-+name: sniper_market_academy
-+description: Application éducative SMC pour traders.
-+publish_to: 'none'
-+
-+version: 2.0.0+14
-+
-+environment:
-+  sdk: ">=3.0.0 <4.0.0"
-+
-+dependencies:
-+  flutter:
-+    sdk: flutter
-+  # Stockage local (offline)
-+  hive: ^2.2.3
-+  hive_flutter: ^1.1.0
-+  shared_preferences: ^2.2.3
-+  path_provider: ^2.1.3
-+  
-+  # State management
-+  provider: ^6.1.2
-+  
-+  # UI/UX
-+  flutter_local_notifications: ^17.0.0
-+  url_launcher: ^6.3.0
-+  audioplayers: ^5.2.1
-+  flutter_native_splash: ^2.4.0
-+  lottie: ^3.1.2
-+  intl: ^0.19.0
-+  image_picker: ^1.0.4
-+  
-+  # Charts
-+  fl_chart: ^0.68.0
-+  candlesticks: ^2.1.0
-+  syncfusion_flutter_charts: ^26.2.14
-+  
-+  # Utils
-+  uuid: ^4.4.2
-+
-+
-+dev_dependencies:
-+  flutter_test:
-+    sdk: flutter
-+  flutter_lints: ^2.0.0
-+  flutter_launcher_icons: ^0.13.1
-+  hive_generator: ^2.0.1
-+  build_runner: ^2.4.9
-+
-+flutter_native_splash:
-+  color: "#000000"
-+  image: assets/images/icon.png
-+  android: true
-+  ios: true
-+
-+flutter_icons:
-+  android: true
-+  ios: true
-+  image_path: "assets/images/icon.png"
-+
-+flutter:
-+  uses-material-design: true
-+  assets:
-+    - assets/images/icon.png
-+    - assets/images/menu_background.png
-+    - assets/images/bg_chart.png
-+    - assets/images/placeholder.png
-+    - assets/images/logo_sniper.png
-+    - assets/animations/candles.json
-+
-+    # 📘 Modules explicatifs
-+    - assets/images/market_structure_explained.png
-+    - assets/images/bos_module_explained.png
-+    - assets/images/fvg_module_explained.png
-+    - assets/images/ote_module_explained.png
-+    - assets/images/liquidity_module_explained.png
-+    - assets/images/displacement_module_explained.png
-+    - assets/images/orderblock_module_explained.png
-+
-+    # 🧠 Exercices interactifs
-+    - assets/images/bos_question_graph_1.png
-+    - assets/images/bos_question_graph_2.png
-+    - assets/images/fvg_exercise1_graph.png
-+    - assets/images/ote_exercise1_graph.png
-+    - assets/images/displacement_exercise1_graph.png
-+    - assets/images/liquidity_exercise1_graph.png
-+    - assets/images/orderblock_exercise1_graph.png
-+    - assets/images/setup_complet_exercise1_graph.png
-+    - assets/images/setup_complet_exercise2_graph.png
-+    - assets/images/fvg_example.png
-+
-+    # 📊 Simulateur papier
-+    - assets/images/chart_1.png
-+    - assets/images/chart_2.png
-+    - assets/images/chart_3.png
-+    - assets/images/chart_4.png
-+    - assets/images/scalp_ready_assistant_exercise1_graph.png
-+    - assets/images/scalp_ready_exercise1.png
-+
-+    # 🤖 Bot IA - Image test pour l'analyse
-+    - assets/images/test.png
-+
-+    # 🔊 Sons
-+    - assets/audio/sniper_scan_effect.mp3
diff --git a/sniper_market_academy/lib/main.dart b/sniper_market_academy/lib/main.dart
index 26385a0..7a29d2b 100644
--- a/sniper_market_academy/lib/main.dart
+++ b/sniper_market_academy/lib/main.dart
@@ -1,10 +1,12 @@
 import 'package:flutter/material.dart';
 import 'package:shared_preferences/shared_preferences.dart';
 import 'package:provider/provider.dart';
-import 'package:firebase_core/firebase_core.dart';
+import 'package:hive_flutter/hive_flutter.dart';
 
 // ✅ Providers
-import 'providers/trade_provider.dart';
+import 'providers/trade_provider.dart';
+import 'providers/wallet_provider.dart';
+import 'providers/quiz_provider.dart';
 
 // ✅ Exercices
 import 'exercises/bos_exercise.dart';
